{"version":3,"file":"mac-scrollbar.module.js","sources":["../src/utils.tsx","../src/hooks.tsx","../src/ThumbBar.tsx","../src/useScrollbar.tsx","../src/Scrollbar.tsx","../src/MacScrollbar.tsx","../src/GlobalScrollbar.tsx"],"sourcesContent":["export function isEnableScrollbar() {\n  return typeof navigator !== 'undefined';\n}\n\nexport function getGapSize(\n  trackGap: number | [startX: number, endX: number, startY: number, endY: number],\n  showBothBar: boolean,\n): [startX: number, gapX: number, startY: number, gapY: number] {\n  if (Array.isArray(trackGap)) {\n    const [startX, endX, startY, endY] = trackGap;\n    return [startX, startX + endX, startY, startY + endY];\n  }\n  const endGap = showBothBar ? trackGap : 0;\n  return [0, endGap, 0, endGap];\n}\n\nexport function handleExtractSize(target: HTMLElement) {\n  const { clientWidth, scrollWidth, clientHeight, scrollHeight } = target;\n  const { paddingTop, paddingRight, paddingBottom, paddingLeft } = window.getComputedStyle(target);\n  return {\n    CW: clientWidth,\n    SW: scrollWidth,\n    CH: clientHeight,\n    SH: scrollHeight,\n    PT: parseInt(paddingTop, 10),\n    PR: parseInt(paddingRight, 10),\n    PB: parseInt(paddingBottom, 10),\n    PL: parseInt(paddingLeft, 10),\n  };\n}\n\nexport function isEnableStyle(disabled?: boolean): 'hidden' | 'auto' {\n  return disabled ? 'hidden' : 'auto';\n}\n\nexport function updateElementStyle(element: HTMLElement, obj: Record<string, number>) {\n  // eslint-disable-next-line guard-for-in, no-restricted-syntax\n  for (const key in obj) {\n    element.style[key] = `${obj[key]}px`;\n  }\n}\n\nexport function computeRatio(\n  scrollSize: number,\n  clientSize: number,\n  gapSize: number,\n  minThumbSize: number = 20,\n) {\n  const boxSize = clientSize - gapSize;\n  const realThumbSize = (boxSize / scrollSize) * boxSize;\n  const thumbSize = Math.max(minThumbSize, realThumbSize);\n  const remaining = boxSize - thumbSize;\n  const distance = scrollSize - clientSize;\n  return {\n    thumbSize,\n    ratio: remaining / distance,\n  };\n}\n\nexport function updateScrollPosition(\n  element: HTMLElement | null | undefined,\n  position: number,\n  horizontal?: boolean,\n) {\n  if (!element) {\n    return;\n  }\n  if (horizontal) {\n    element.scrollLeft = position;\n    return;\n  }\n  element.scrollTop = position;\n}\n\nexport function updateScrollElementStyle(\n  containerElement: HTMLElement | null | undefined,\n  horizontalElement: HTMLElement | null | undefined,\n  verticalElement: HTMLElement | null | undefined,\n  gapX: number,\n  gapY: number,\n  minThumbSize?: number,\n) {\n  if (!containerElement) {\n    return;\n  }\n  const { scrollTop, scrollLeft, scrollWidth, scrollHeight, clientWidth, clientHeight } =\n    containerElement;\n\n  if (horizontalElement) {\n    updateElementStyle(horizontalElement.firstChild as HTMLDivElement, {\n      left: scrollLeft * computeRatio(scrollWidth, clientWidth, gapX, minThumbSize).ratio,\n    });\n  }\n\n  if (verticalElement) {\n    updateElementStyle(verticalElement.firstChild as HTMLDivElement, {\n      top: scrollTop * computeRatio(scrollHeight, clientHeight, gapY, minThumbSize).ratio,\n    });\n  }\n}\n","import type { RefObject } from 'react';\nimport { useRef, useEffect, useCallback } from 'react';\n\nexport function useInitial<T extends (...args: any) => any>(callback: T) {\n  const { current } = useRef({ sign: false, fn: undefined as ReturnType<T> });\n  if (!current.sign) {\n    current.sign = true;\n    current.fn = callback();\n  }\n  return current.fn;\n}\n\nexport function useLatest<T>(something: T) {\n  const ref = useRef(something);\n  ref.current = something;\n  return ref;\n}\n\nexport function useEventListener<K extends keyof WindowEventMap>(\n  type: K | undefined,\n  fn: (evt: WindowEventMap[K]) => void,\n  options?: AddEventListenerOptions,\n) {\n  const latest = useLatest(fn);\n\n  useEffect(() => {\n    function wrapper(evt: WindowEventMap[K]) {\n      latest.current(evt);\n    }\n    if (type) {\n      window.addEventListener(type, wrapper, options);\n    }\n    return () => {\n      if (type) {\n        window.removeEventListener(type, wrapper);\n      }\n    };\n  }, [type]);\n}\n\nexport function useResizeObserver(\n  scrollBoxRef: RefObject<HTMLElement | null>,\n  callback: () => void,\n) {\n  const throttleCallback = useDebounceCallback(callback, { maxWait: 8, leading: true });\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      throttleCallback();\n    });\n\n    if (scrollBoxRef.current) {\n      if (scrollBoxRef.current === document.documentElement) {\n        resizeObserver.observe(document.body);\n      } else {\n        resizeObserver.observe(scrollBoxRef.current);\n        Array.from(scrollBoxRef.current.children).forEach((child) => {\n          resizeObserver.observe(child);\n        });\n      }\n    }\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [scrollBoxRef]);\n}\n\nexport function useDebounceCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  {\n    leading = false,\n    maxWait,\n    wait = maxWait || 0,\n  }: {\n    leading?: boolean;\n    maxWait?: number;\n    wait?: number;\n  },\n): (...args: CallbackArguments) => void {\n  const callbackRef = useLatest(callback);\n  const prev = useRef(0);\n  const trailingTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const clearTrailing = () => trailingTimeout.current && clearTimeout(trailingTimeout.current);\n\n  useEffect(\n    () => () => {\n      prev.current = 0;\n      clearTrailing();\n    },\n    [wait, maxWait, leading],\n  );\n\n  return useCallback(\n    (...args) => {\n      const now = Date.now();\n\n      function call() {\n        prev.current = now;\n        clearTrailing();\n        callbackRef.current.apply(null, args);\n      }\n      const last = prev.current;\n      const offset = now - last;\n      // leading\n      if (last === 0) {\n        if (leading) {\n          call();\n          return;\n        }\n        prev.current = now;\n      }\n\n      // body\n      if (maxWait !== undefined) {\n        if (offset > maxWait) {\n          call();\n          return;\n        }\n      } else if (offset < wait) {\n        prev.current = now;\n      }\n\n      // trailing\n      clearTrailing();\n      trailingTimeout.current = setTimeout(() => {\n        call();\n        prev.current = 0;\n      }, wait);\n    },\n    [wait, maxWait, leading],\n  );\n}\n","import type { CSSProperties, RefObject, MouseEvent, Dispatch, SetStateAction } from 'react';\nimport React, { memo } from 'react';\nimport { computeRatio, updateScrollPosition } from './utils';\nimport type { ActionPosition, BoxSize } from './types';\nimport './ThumbBar.less';\n\nexport interface ThumbBarProps {\n  visible: boolean;\n  isGlobal: boolean;\n  trackStyle?: (horizontal?: boolean) => CSSProperties;\n  thumbStyle?: (horizontal?: boolean) => CSSProperties;\n  minThumbSize?: number;\n  start: number;\n  gap: number;\n  /**\n   * @default vertical\n   */\n  horizontal?: boolean;\n  pin: boolean | undefined;\n\n  trackRef: RefObject<HTMLDivElement>;\n  boxSize: BoxSize;\n\n  update: Dispatch<SetStateAction<ActionPosition>>;\n}\n\nfunction ThumbBar({\n  visible,\n  isGlobal,\n  trackStyle,\n  thumbStyle,\n  minThumbSize,\n  start,\n  gap,\n  horizontal,\n  pin,\n\n  trackRef,\n  boxSize,\n\n  update,\n}: ThumbBarProps) {\n  const { CW, CH, PT, PR, PB, PL, SW, SH } = boxSize;\n\n  const [sizeKey, offsetSize, scrollSize] = horizontal ? ['width', CW, SW] : ['height', CH, SH];\n\n  function getContainerBox() {\n    const targetNode = trackRef.current?.parentNode?.parentNode as HTMLDivElement | HTMLBodyElement;\n    return targetNode === document.body ? document.documentElement : targetNode;\n  }\n\n  function handleThumbBarClick(e: MouseEvent<HTMLDivElement>) {\n    const containerBox = getContainerBox();\n    const { scrollLeft, scrollTop } = containerBox;\n    const scrollPosition = horizontal ? scrollLeft : scrollTop;\n    const rect = (e.target as HTMLDivElement).getBoundingClientRect();\n    const clickPosition = horizontal\n      ? (e.clientX - rect.left) / rect.width\n      : (e.clientY - rect.top) / rect.height;\n    const scrollRatio = scrollPosition / scrollSize;\n\n    const position =\n      clickPosition > scrollRatio\n        ? Math.min(scrollSize, scrollPosition + offsetSize)\n        : Math.max(0, scrollPosition - offsetSize);\n\n    updateScrollPosition(containerBox, position, horizontal);\n  }\n\n  function handleStart(e: MouseEvent<HTMLDivElement>) {\n    e.stopPropagation();\n    const { scrollLeft, scrollTop } = getContainerBox();\n    update({\n      pinX: horizontal,\n      pinY: !horizontal,\n      lastST: scrollTop,\n      lastSL: scrollLeft,\n      startX: e.clientX,\n      startY: e.clientY,\n    });\n  }\n\n  const style: CSSProperties = {\n    ...(isGlobal\n      ? { [sizeKey]: gap > 0 ? `calc(100% - ${gap}px)` : undefined }\n      : {\n          [sizeKey]: offsetSize - gap,\n          ...(horizontal\n            ? {\n                bottom: -PB,\n                left: -PL + start,\n              }\n            : {\n                top: PT - gap + start,\n                right: -PR,\n                transform: 'translateY(-100%)',\n              }),\n        }),\n    ...(trackStyle && trackStyle(horizontal)),\n  };\n\n  return (\n    <div\n      className={`ms-track${horizontal ? ' ms-x' : ' ms-y'}${\n        pin ? ' ms-active' : visible ? ' ms-track-show' : ''\n      }`}\n      onClick={handleThumbBarClick}\n      ref={trackRef}\n      style={style}\n    >\n      <div\n        className=\"ms-thumb\"\n        draggable=\"true\"\n        onDragStartCapture={(e) => {\n          e.stopPropagation();\n          e.preventDefault();\n        }}\n        onMouseDown={handleStart}\n        onClick={(e) => e.stopPropagation()}\n        style={{\n          [sizeKey]: computeRatio(scrollSize, offsetSize, gap, minThumbSize).thumbSize,\n          ...(thumbStyle && thumbStyle(horizontal)),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default memo(ThumbBar);\n","import React, { useMemo, useRef, useState } from 'react';\nimport { useDebounceCallback, useEventListener, useResizeObserver } from './hooks';\nimport {\n  computeRatio,\n  getGapSize,\n  handleExtractSize,\n  updateScrollElementStyle,\n  updateScrollPosition,\n} from './utils';\nimport type { GlobalScrollbarBase } from './types';\nimport type { ActionPosition, BoxSize } from './types';\nimport ThumbBar from './ThumbBar';\n\nconst initialSize: BoxSize = {\n  CW: 0,\n  SW: 0,\n  CH: 0,\n  SH: 0,\n  PT: 0,\n  PR: 0,\n  PB: 0,\n  PL: 0,\n};\n\nconst initialAction: ActionPosition = {\n  pinX: false,\n  pinY: false,\n  lastST: 0,\n  lastSL: 0,\n  startX: 0,\n  startY: 0,\n};\n\nexport interface UseScrollbarParams extends GlobalScrollbarBase {\n  trackGap?: number | [startX: number, endX: number, startY: number, endY: number];\n}\n\nexport default function useScrollbar(\n  scrollBox: React.MutableRefObject<HTMLElement | null> | Window,\n  { trackGap = 16, trackStyle, thumbStyle, minThumbSize, suppressAutoHide }: UseScrollbarParams,\n) {\n  const isGlobal = scrollBox === window;\n  const containerRef = useMemo(() => {\n    if (isGlobal) {\n      return { current: document.documentElement };\n    }\n    return scrollBox as React.MutableRefObject<HTMLElement | null>;\n  }, [isGlobal, scrollBox]);\n\n  const horizontalRef = useRef<HTMLDivElement>(null);\n  const verticalRef = useRef<HTMLDivElement>(null);\n\n  const [boxSize, updateBoxSize] = useState<BoxSize>(initialSize);\n  const [action, updateAction] = useState<ActionPosition>(initialAction);\n  const [barVisible, updateBarVisible] = useState<boolean>(true);\n\n  const hideScrollbar = () => !suppressAutoHide && updateBarVisible(false);\n  const delayHideScrollbar = useDebounceCallback(hideScrollbar, { wait: 1000 });\n\n  const { CW, SW, CH, SH } = boxSize;\n  const showHorizontalBar = SW - CW > 0;\n  const showVerticalBar = SH - CH > 0;\n  const [startX, gapX, startY, gapY] = getGapSize(trackGap, showHorizontalBar && showVerticalBar);\n\n  const updateLayerThrottle = useDebounceCallback(\n    () => {\n      updateBarVisible(true);\n      delayHideScrollbar();\n      updateScrollElementStyle(\n        containerRef.current,\n        horizontalRef.current,\n        verticalRef.current,\n        gapX,\n        gapY,\n        minThumbSize,\n      );\n    },\n    { maxWait: 8, leading: true },\n  );\n\n  useEventListener(\n    'mousemove',\n    (evt) => {\n      if (action.pinX) {\n        const horizontalRatio = computeRatio(SW, CW, gapX, minThumbSize).ratio;\n        updateScrollPosition(\n          containerRef.current,\n          Math.floor((evt.clientX - action.startX) * (1 / horizontalRatio) + action.lastSL),\n          true,\n        );\n      }\n      if (action.pinY) {\n        const verticalRatio = computeRatio(SH, CH, gapY, minThumbSize).ratio;\n        updateScrollPosition(\n          containerRef.current,\n          Math.floor((evt.clientY - action.startY) * (1 / verticalRatio) + action.lastST),\n        );\n      }\n    },\n    { capture: true },\n  );\n\n  useEventListener('mouseup', () => updateAction(initialAction));\n\n  useResizeObserver(containerRef, updateLayerNow);\n\n  function updateLayerNow() {\n    if (containerRef.current) {\n      updateBoxSize(handleExtractSize(containerRef.current));\n      updateLayerThrottle();\n    }\n  }\n\n  const horizontalBar = showHorizontalBar && (\n    <ThumbBar\n      visible={barVisible}\n      isGlobal={isGlobal}\n      trackStyle={trackStyle}\n      thumbStyle={thumbStyle}\n      minThumbSize={minThumbSize}\n      start={startX}\n      gap={gapX}\n      horizontal\n      pin={action.pinX}\n      trackRef={horizontalRef}\n      boxSize={boxSize}\n      update={updateAction}\n    />\n  );\n\n  const verticalBar = showVerticalBar && (\n    <ThumbBar\n      visible={barVisible}\n      isGlobal={isGlobal}\n      trackStyle={trackStyle}\n      thumbStyle={thumbStyle}\n      minThumbSize={minThumbSize}\n      start={startY}\n      gap={gapY}\n      pin={action.pinY}\n      trackRef={verticalRef}\n      boxSize={boxSize}\n      update={updateAction}\n    />\n  );\n\n  return [horizontalBar, verticalBar, updateLayerNow, updateLayerThrottle, hideScrollbar] as const;\n}\n","import React, { useImperativeHandle, useRef } from 'react';\nimport type { ScrollbarBase } from './types';\nimport useScrollbar from './useScrollbar';\nimport './Scrollbar.less';\n\nexport interface ScrollbarProps extends ScrollbarBase {\n  innerRef?: React.Ref<HTMLElement | null>;\n  Wrapper: React.HTMLFactory<HTMLElement>;\n}\n\nexport default function ScrollBar({\n  className = '',\n  onScroll,\n  onMouseEnter,\n  onMouseLeave,\n  innerRef,\n  children,\n  suppressScrollX,\n  suppressScrollY,\n  suppressAutoHide,\n  skin = 'light',\n  trackGap,\n  trackStyle,\n  thumbStyle,\n  minThumbSize,\n  Wrapper,\n  ...props\n}: ScrollbarProps) {\n  const scrollBoxRef = useRef<HTMLElement>(null);\n  useImperativeHandle(innerRef, () => scrollBoxRef.current);\n\n  const [horizontalBar, verticalBar, updateLayerNow, updateLayerThrottle, hideScrollbar] =\n    useScrollbar(scrollBoxRef, {\n      trackGap,\n      trackStyle,\n      thumbStyle,\n      minThumbSize,\n      suppressAutoHide,\n    });\n\n  function handleScroll(evt: React.UIEvent<HTMLElement, UIEvent>) {\n    if (onScroll) {\n      onScroll(evt);\n    }\n    updateLayerThrottle();\n  }\n\n  function handleMouseEnter(evt: React.MouseEvent<HTMLElement>) {\n    if (onMouseEnter) {\n      onMouseEnter(evt);\n    }\n    updateLayerNow();\n  }\n\n  function handleMouseLeave(evt: React.MouseEvent<HTMLElement>) {\n    if (onMouseLeave) {\n      onMouseLeave(evt);\n    }\n    hideScrollbar();\n  }\n\n  return (\n    <Wrapper\n      className={`ms-container${className && ` ${className}`}`}\n      ref={scrollBoxRef}\n      onScroll={handleScroll}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...props}\n    >\n      <div className={`ms-track-box ms-theme-${skin}`}>\n        {!suppressScrollX && horizontalBar}\n        {!suppressScrollY && verticalBar}\n      </div>\n      {children}\n    </Wrapper>\n  );\n}\n","import React, { forwardRef } from 'react';\nimport { isEnableStyle, isEnableScrollbar } from './utils';\nimport Scrollbar from './Scrollbar';\nimport type { ScrollbarBase } from './types';\n\nexport interface MacScrollbarProps extends ScrollbarBase {\n  /**\n   * Custom element type.\n   * @defaultValue 'div'\n   */\n  as?: keyof JSX.IntrinsicElements | string;\n}\n\nexport const MacScrollbar = forwardRef<HTMLElement, MacScrollbarProps>(\n  ({ suppressScrollX, suppressScrollY, as = 'div', style, children, ...props }, ref) => {\n    const currentStyle = {\n      overflowX: isEnableStyle(suppressScrollX),\n      overflowY: isEnableStyle(suppressScrollY),\n      ...style,\n    };\n    const Wrapper = as as unknown as React.HTMLFactory<HTMLElement>;\n\n    if (!isEnableScrollbar()) {\n      return (\n        <Wrapper style={currentStyle} ref={ref} {...props}>\n          {children}\n        </Wrapper>\n      );\n    }\n\n    return (\n      <Scrollbar\n        style={currentStyle}\n        innerRef={ref}\n        suppressScrollX={suppressScrollX}\n        suppressScrollY={suppressScrollY}\n        Wrapper={Wrapper}\n        {...props}\n      >\n        {children}\n      </Scrollbar>\n    );\n  },\n);\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { isEnableScrollbar } from './utils';\nimport { useEventListener, useInitial } from './hooks';\nimport type { GlobalScrollbarBase } from './types';\nimport useScrollbar from './useScrollbar';\n\nexport interface GlobalScrollbarProps extends GlobalScrollbarBase {\n  /**\n   * Gap at the cross end of the scroll bar.\n   * @defaultValue 16\n   */\n  trackGap?: number | [startX: number, endX: number, startY: number, endY: number];\n}\n\nfunction GlobalScrollbarInject({ skin = 'light', ...props }: GlobalScrollbarProps) {\n  const wrapper = useInitial(() => document.createElement('div'));\n\n  useEffect(() => {\n    wrapper.classList.add('ms-track-global', `ms-theme-${skin}`);\n    wrapper.classList.remove(`ms-theme-${skin === 'light' ? 'dark' : 'light'}`);\n    const wrapperCls = 'ms-container';\n    const docClassList = document.documentElement.classList;\n\n    docClassList.add(wrapperCls);\n    document.body.append(wrapper);\n    return () => {\n      docClassList.remove(wrapperCls);\n      document.body.removeChild(wrapper);\n    };\n  }, [wrapper, skin]);\n\n  const [horizontalBar, verticalBar, updateLayerNow, updateLayerThrottle] = useScrollbar(\n    window,\n    props,\n  );\n\n  useEventListener('scroll', () => {\n    if (!(horizontalBar || verticalBar)) {\n      updateLayerNow();\n      return;\n    }\n    updateLayerThrottle();\n  });\n\n  return createPortal(\n    <>\n      {horizontalBar}\n      {verticalBar}\n    </>,\n    wrapper,\n  );\n}\n\nexport function GlobalScrollbar(props: GlobalScrollbarProps) {\n  if (!isEnableScrollbar()) {\n    return null;\n  }\n  return <GlobalScrollbarInject {...props} />;\n}\n"],"names":["isEnableScrollbar","navigator","isEnableStyle","disabled","updateElementStyle","element","obj","key","style","computeRatio","scrollSize","clientSize","gapSize","minThumbSize","boxSize","thumbSize","Math","max","ratio","updateScrollPosition","position","horizontal","scrollLeft","scrollTop","useLatest","something","ref","useRef","current","useEventListener","type","fn","options","latest","useEffect","wrapper","evt","window","addEventListener","removeEventListener","useDebounceCallback","callback","leading","maxWait","wait","callbackRef","prev","trailingTimeout","clearTrailing","clearTimeout","useCallback","args","now","Date","call","apply","last","offset","undefined","setTimeout","memo","visible","isGlobal","trackStyle","thumbStyle","start","gap","pin","trackRef","update","CW","CH","PT","PR","PB","PL","SW","SH","sizeKey","offsetSize","getContainerBox","targetNode","_trackRef$current","parentNode","_trackRef$current$par","document","body","documentElement","bottom","left","top","right","transform","React","className","onClick","e","containerBox","scrollPosition","rect","target","getBoundingClientRect","clientX","width","clientY","height","min","draggable","onDragStartCapture","stopPropagation","preventDefault","onMouseDown","pinX","pinY","lastST","lastSL","startX","startY","initialSize","initialAction","useScrollbar","scrollBox","trackGap","suppressAutoHide","containerRef","useMemo","horizontalRef","verticalRef","updateBoxSize","useState","action","updateAction","barVisible","updateBarVisible","hideScrollbar","delayHideScrollbar","showHorizontalBar","showVerticalBar","gapX","gapY","showBothBar","Array","isArray","endX","endY","endGap","getGapSize","updateLayerThrottle","containerElement","horizontalElement","verticalElement","scrollWidth","scrollHeight","clientWidth","clientHeight","firstChild","updateScrollElementStyle","updateLayerNow","paddingTop","paddingRight","paddingBottom","paddingLeft","getComputedStyle","parseInt","handleExtractSize","horizontalRatio","floor","verticalRatio","capture","scrollBoxRef","throttleCallback","resizeObserver","ResizeObserver","observe","from","children","forEach","child","disconnect","useResizeObserver","ThumbBar","ScrollBar","onScroll","onMouseEnter","onMouseLeave","innerRef","suppressScrollX","suppressScrollY","skin","Wrapper","props","useImperativeHandle","horizontalBar","verticalBar","MacScrollbar","forwardRef","as","currentStyle","overflowX","overflowY","Scrollbar","GlobalScrollbarInject","sign","createElement","useInitial","classList","add","remove","wrapperCls","docClassList","append","removeChild","createPortal","GlobalScrollbar"],"mappings":"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"}