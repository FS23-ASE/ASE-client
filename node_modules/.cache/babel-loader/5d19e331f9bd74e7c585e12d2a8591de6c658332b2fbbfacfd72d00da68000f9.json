{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport stream from \"stream\";\nvar ZlibHeaderTransformStream = /*#__PURE__*/function (_stream$Transform) {\n  _inherits(ZlibHeaderTransformStream, _stream$Transform);\n  var _super = _createSuper(ZlibHeaderTransformStream);\n  function ZlibHeaderTransformStream() {\n    _classCallCheck(this, ZlibHeaderTransformStream);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ZlibHeaderTransformStream, [{\n    key: \"__transform\",\n    value: function __transform(chunk, encoding, callback) {\n      this.push(chunk);\n      callback();\n    }\n  }, {\n    key: \"_transform\",\n    value: function _transform(chunk, encoding, callback) {\n      if (chunk.length !== 0) {\n        this._transform = this.__transform;\n\n        // Add Default Compression headers if no zlib headers are present\n        if (chunk[0] !== 120) {\n          // Hex: 78\n          var header = Buffer.alloc(2);\n          header[0] = 120; // Hex: 78\n          header[1] = 156; // Hex: 9C \n          this.push(header, encoding);\n        }\n      }\n      this.__transform(chunk, encoding, callback);\n    }\n  }]);\n  return ZlibHeaderTransformStream;\n}(stream.Transform);\nexport default ZlibHeaderTransformStream;","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","stream","ZlibHeaderTransformStream","_stream$Transform","_super","apply","arguments","key","value","__transform","chunk","encoding","callback","push","_transform","length","header","Buffer","alloc","Transform"],"sources":["/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js"],"sourcesContent":["\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,eAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,YAAA;AAEb,OAAOC,MAAM,MAAM,QAAQ;AAAC,IAEtBC,yBAAyB,0BAAAC,iBAAA;EAAAJ,SAAA,CAAAG,yBAAA,EAAAC,iBAAA;EAAA,IAAAC,MAAA,GAAAJ,YAAA,CAAAE,yBAAA;EAAA,SAAAA,0BAAA;IAAAL,eAAA,OAAAK,yBAAA;IAAA,OAAAE,MAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAAR,YAAA,CAAAI,yBAAA;IAAAK,GAAA;IAAAC,KAAA,EAC7B,SAAAC,YAAYC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACrC,IAAI,CAACC,IAAI,CAACH,KAAK,CAAC;MAChBE,QAAQ,EAAE;IACZ;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAM,WAAWJ,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;MACpC,IAAIF,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;QACtB,IAAI,CAACD,UAAU,GAAG,IAAI,CAACL,WAAW;;QAElC;QACA,IAAIC,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAAE;UACtB,IAAMM,MAAM,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;UAC9BF,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;UACjBA,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;UACjB,IAAI,CAACH,IAAI,CAACG,MAAM,EAAEL,QAAQ,CAAC;QAC7B;MACF;MAEA,IAAI,CAACF,WAAW,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;IAC7C;EAAC;EAAA,OAAAV,yBAAA;AAAA,EApBqCD,MAAM,CAACkB,SAAS;AAuBxD,eAAejB,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}