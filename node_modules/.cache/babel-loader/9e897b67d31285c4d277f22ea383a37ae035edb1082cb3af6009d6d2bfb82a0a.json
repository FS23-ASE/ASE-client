{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _wrapAsyncGenerator from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\nimport { TextEncoder } from 'util';\nimport { Readable } from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\nvar BOUNDARY_ALPHABET = utils.ALPHABET.ALPHA_DIGIT + '-_';\nvar textEncoder = new TextEncoder();\nvar CRLF = '\\r\\n';\nvar CRLF_BYTES = textEncoder.encode(CRLF);\nvar CRLF_BYTES_COUNT = 2;\nvar FormDataPart = /*#__PURE__*/function () {\n  function FormDataPart(name, value) {\n    _classCallCheck(this, FormDataPart);\n    var escapeName = this.constructor.escapeName;\n    var isStringValue = utils.isString(value);\n    var headers = \"Content-Disposition: form-data; name=\\\"\".concat(escapeName(name), \"\\\"\").concat(!isStringValue && value.name ? \"; filename=\\\"\".concat(escapeName(value.name), \"\\\"\") : '').concat(CRLF);\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += \"Content-Type: \".concat(value.type || \"application/octet-stream\").concat(CRLF);\n    }\n    this.headers = textEncoder.encode(headers + CRLF);\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n    this.name = name;\n    this.value = value;\n  }\n  _createClass(FormDataPart, [{\n    key: \"encode\",\n    value: function encode() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var value;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.headers;\n            case 2:\n              value = _this.value;\n              if (!utils.isTypedArray(value)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 6;\n              return value;\n            case 6:\n              _context.next = 9;\n              break;\n            case 8:\n              return _context.delegateYield(_asyncGeneratorDelegate(_asyncIterator(readBlob(value)), _awaitAsyncGenerator), \"t0\", 9);\n            case 9:\n              _context.next = 11;\n              return CRLF_BYTES;\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }], [{\n    key: \"escapeName\",\n    value: function escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, function (match) {\n        return {\n          '\\r': '%0D',\n          '\\n': '%0A',\n          '\"': '%22'\n        }[match];\n      });\n    }\n  }]);\n  return FormDataPart;\n}();\nvar formDataToStream = function formDataToStream(form, headersHandler, options) {\n  var _ref2 = options || {},\n    _ref2$tag = _ref2.tag,\n    tag = _ref2$tag === void 0 ? 'form-data-boundary' : _ref2$tag,\n    _ref2$size = _ref2.size,\n    size = _ref2$size === void 0 ? 25 : _ref2$size,\n    _ref2$boundary = _ref2.boundary,\n    boundary = _ref2$boundary === void 0 ? tag + '-' + utils.generateString(size, BOUNDARY_ALPHABET) : _ref2$boundary;\n  if (!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long');\n  }\n  var boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  var footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF + CRLF);\n  var contentLength = footerBytes.byteLength;\n  var parts = Array.from(form.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      name = _ref4[0],\n      value = _ref4[1];\n    var part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n  contentLength += boundaryBytes.byteLength * parts.length;\n  contentLength = utils.toFiniteNumber(contentLength);\n  var computedHeaders = {\n    'Content-Type': \"multipart/form-data; boundary=\".concat(boundary)\n  };\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n  headersHandler && headersHandler(computedHeaders);\n  return Readable.from(_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _iterator, _step, part;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _iterator = _createForOfIteratorHelper(parts);\n          _context2.prev = 1;\n          _iterator.s();\n        case 3:\n          if ((_step = _iterator.n()).done) {\n            _context2.next = 10;\n            break;\n          }\n          part = _step.value;\n          _context2.next = 7;\n          return boundaryBytes;\n        case 7:\n          return _context2.delegateYield(_asyncGeneratorDelegate(_asyncIterator(part.encode()), _awaitAsyncGenerator), \"t0\", 8);\n        case 8:\n          _context2.next = 3;\n          break;\n        case 10:\n          _context2.next = 15;\n          break;\n        case 12:\n          _context2.prev = 12;\n          _context2.t1 = _context2[\"catch\"](1);\n          _iterator.e(_context2.t1);\n        case 15:\n          _context2.prev = 15;\n          _iterator.f();\n          return _context2.finish(15);\n        case 18:\n          _context2.next = 20;\n          return footerBytes;\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[1, 12, 15, 18]]);\n  }))());\n};\nexport default formDataToStream;","map":{"version":3,"names":["TextEncoder","Readable","utils","readBlob","BOUNDARY_ALPHABET","ALPHABET","ALPHA_DIGIT","textEncoder","CRLF","CRLF_BYTES","encode","CRLF_BYTES_COUNT","FormDataPart","name","value","_classCallCheck","escapeName","constructor","isStringValue","isString","headers","concat","String","replace","type","contentLength","byteLength","size","_createClass","key","_this","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","isTypedArray","delegateYield","_asyncGeneratorDelegate","_asyncIterator","_awaitAsyncGenerator","stop","match","formDataToStream","form","headersHandler","options","_ref2","_ref2$tag","tag","_ref2$size","_ref2$boundary","boundary","generateString","isFormData","TypeError","length","Error","boundaryBytes","footerBytes","parts","Array","from","entries","map","_ref3","_ref4","_slicedToArray","part","toFiniteNumber","computedHeaders","Number","isFinite","_callee2","_iterator","_step","_callee2$","_context2","_createForOfIteratorHelper","s","n","done","t1","e","f","finish"],"sources":["/Users/hanli/Desktop/UZH/Advanced Software Engineering/ASE-client/node_modules/axios/lib/helpers/formDataToStream.js"],"sourcesContent":["import {TextEncoder} from 'util';\nimport {Readable} from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\n\nconst BOUNDARY_ALPHABET = utils.ALPHABET.ALPHA_DIGIT + '-_';\n\nconst textEncoder = new TextEncoder();\n\nconst CRLF = '\\r\\n';\nconst CRLF_BYTES = textEncoder.encode(CRLF);\nconst CRLF_BYTES_COUNT = 2;\n\nclass FormDataPart {\n  constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }\n\n  async *encode(){\n    yield this.headers;\n\n    const {value} = this;\n\n    if(utils.isTypedArray(value)) {\n      yield value;\n    } else {\n      yield* readBlob(value);\n    }\n\n    yield CRLF_BYTES;\n  }\n\n  static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, (match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match]));\n  }\n}\n\nconst formDataToStream = (form, headersHandler, options) => {\n  const {\n    tag = 'form-data-boundary',\n    size = 25,\n    boundary = tag + '-' + utils.generateString(size, BOUNDARY_ALPHABET)\n  } = options || {};\n\n  if(!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long')\n  }\n\n  const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF + CRLF);\n  let contentLength = footerBytes.byteLength;\n\n  const parts = Array.from(form.entries()).map(([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n\n  contentLength += boundaryBytes.byteLength * parts.length;\n\n  contentLength = utils.toFiniteNumber(contentLength);\n\n  const computedHeaders = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`\n  }\n\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n\n  headersHandler && headersHandler(computedHeaders);\n\n  return Readable.from((async function *() {\n    for(const part of parts) {\n      yield boundaryBytes;\n      yield* part.encode();\n    }\n\n    yield footerBytes;\n  })());\n};\n\nexport default formDataToStream;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}