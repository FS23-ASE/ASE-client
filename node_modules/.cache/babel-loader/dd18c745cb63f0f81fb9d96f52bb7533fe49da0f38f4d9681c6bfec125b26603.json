{"ast":null,"code":"import { isProduction } from 'helpers/isProduction';\n\n/**\n * This helper function returns the current domain of the API.\n * If the environment is production, the production Heroku URL will be returned.\n * Otherwise, the link localhost:8080 will be returned (Spring server default port).\n * @returns {string}\n */\nexport var getDomain = function getDomain() {\n  var prodUrl = 'https://sopra-fs22-robime-server.herokuapp.com/'; // TODO: insert your groups heroku prod url for server (once deployed)\n  var devUrl = 'http://localhost:8080';\n  return isProduction() ? prodUrl : devUrl;\n};","map":{"version":3,"names":["isProduction","getDomain","prodUrl","devUrl"],"sources":["/Users/ruiruiwang/IdeaProjects/ASE-client/src/helpers/getDomain.js"],"sourcesContent":["import { isProduction } from 'helpers/isProduction';\n\n/**\n * This helper function returns the current domain of the API.\n * If the environment is production, the production Heroku URL will be returned.\n * Otherwise, the link localhost:8080 will be returned (Spring server default port).\n * @returns {string}\n */\nexport const getDomain = () => {\n  const prodUrl = 'https://sopra-fs22-robime-server.herokuapp.com/'; // TODO: insert your groups heroku prod url for server (once deployed)\n  const devUrl = 'http://localhost:8080';\n\n  return isProduction() ? prodUrl : devUrl;\n};\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,sBAAsB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAC7B,IAAMC,OAAO,GAAG,iDAAiD,CAAC,CAAC;EACnE,IAAMC,MAAM,GAAG,uBAAuB;EAEtC,OAAOH,YAAY,EAAE,GAAGE,OAAO,GAAGC,MAAM;AAC1C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}